#set a file path 
setwd('M:/Datasets')
#Set up data 
X <- matrix(c(6, 9, 10, 6, 8, 3), nrow = 3, byrow = TRUE)
X

Xbar <- colMeans(X)
Xbar
S <- var(X)
S
Sinv <- solve(S)
Sinv
n <- nrow(X)
mu0 <- c(9, 5)
mu0

Xbar <- matrix(Xbar, ncol = 1)
mu0 <-  matrix(mu0, ncol = 1)
Xbar
mu0
#We have set up our sample mean and proposed mean
#Using these we can perform a T^2 test
n <- nrow(X)
T2 <- n*t(Xbar - mu0) %*% Sinv %*% (Xbar - mu0)
T2
#test statistic set up
p <- ncol(X)
((n-1)*p/(n-p))*qf(0.9, df1 = p , df2 = n - p)
#For example we perform the test at the 10% level
#if t^2 is larger than this then we reject H:0 that Xbar is equal to mu0
#t2 less than 198 thus we fail to reject H0
#find p value
F <- (n - p)*T2/((n - 1)*p)
pvalue <- 1 - pf(F, p, n-p)
pvalue #different pvalue

#we can plot the confidence ellipse for this 
library("car")
par(mar = c(4,4,1,1))

ellipse(center = as.vector(Xbar), 
         shape = S, 
         radius = 8.124, 
         col = "red", 
         add = FALSE, 
         asp = 1, 
         xlab = expression(x[1]), 
         ylab = expression(x[2]))

#PART 2
#We can use a real dataset
X <- read.table("moven.txt", header = TRUE)
X[1:3, ]   # View the first few rows.
#check normality
library("heplots")
cqplot(X)
qqnorm(X[,1])
qqnorm(X[,2])

#Suppose we believe that our observations come from a distribution with mean mu0 we can test this
mu0<-mu0 <-  matrix(c(0.562,0.589), ncol = 1)
mu0
S<-var(X)
Sinv<-solve(S)
Xbar<-matrix(colMeans(X),ncol =1)
Xbar
n<-nrow(X)
T2<-n*t(Xbar-mu0)%*%Sinv%*%(Xbar-mu0)#This is our T^2 test statistic
T2
p<-ncol(X)
(((n-1)*p)/(n-p))*qf(0.95,df1=p,df2=n-p)
#T2 is less than the statistic thus we fail to reject H0 at the 5% level

#We can draw a confidence ellipse using the eigen vectors
s <- var(X)       # Estimated covariance matrix.
ev <- eigen(s)
ev$val            # Eigenvalues.
ev$vec            # Normalised eigenvectors.
qf(0.95, 2, 40)   # F distribution quantile

radius = sqrt(2 * (41) * qf(0.95, 2, 40) / (42*(40)))

radius
ellipse(center = as.vector(Xbar), 
         shape = s, 
         radius = radius, 
         col = "red", 
         add = FALSE, 
         asp = 1, 
         xlab = expression(x[1]), 
         ylab = expression(x[2]))
#The next dataset looks at Tibetan skulls from in 2 different regions
#Using another dataset we can compare two variables to see if they have the same mean
tibet <- read.table("tibet.txt",header = TRUE)
tibet[1:5, ]  # View the first 5 rows.
#splitting into 2 groups 
x1 <- tibet[tibet$type == 1, -6]
x2 <- tibet[tibet$type == 2, -6]
#mean of variable 1 and 2
m1 <- colMeans(x1)
m2 <- colMeans(x2)
m1
m2
#covariance matrix of variable 1 and 2
s1 <- var(x1)
s2 <- var(x2)
s1
s2
#pooled covariance matrix
sp <- (16/30)*s1 + (14/30)*s2
#the inverse of the pooled covariance matrix
spi <- solve((1/17+1/15)*sp)


d <- m1 - m2  # Estimated difference in means.
d
d <- matrix(d, ncol = 1)  # Make sure it is treated as a column vector.

d
T2 <- t(d) %*% spi %*% d #This is our test statistic 
T2
#we can now test that the mean vector is the same for the two populations
n1<-nrow(x1)
n2<-nrow(x2)
p<-ncol(x1)
(((n1+n2-2)*p)/(n1+n2-p-1))*qf(0.95,df1=p,df2=n1+n2-p-1)
#thus reject h0 in favour of h1 as T2 is bigger that this. 
#Thus the skull sizes do not have the same meansat the 5% level
